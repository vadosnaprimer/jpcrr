#LyX 2.0.0beta4 created this file. For more info see http://www.lyx.org/
\lyxformat 412
\begin_document
\begin_header
\textclass article
\use_default_options true
\maintain_unincluded_children false
\language finnish
\language_package default
\inputencoding auto
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\use_hyperref false
\papersize default
\use_geometry false
\use_amsmath 1
\use_esint 1
\use_mhchem 1
\use_mathdots 1
\cite_engine basic
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\use_refstyle 1
\index Hakusana
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Section
Bus methods
\end_layout

\begin_layout Subsection
By bus core:
\end_layout

\begin_layout Subsubsection
load-plugin <pluginname> [<arguments>...]
\end_layout

\begin_layout Standard
Loads plugin <pluginname>, passing arguments (if given) <arguments>...
 to it.
 Returns id of plugin.
\end_layout

\begin_layout Subsubsection
unload-plugin <pluginid>
\end_layout

\begin_layout Standard
Unloads plugin with specified id <pluginid>.
 No return value.
\end_layout

\begin_layout Subsubsection
list-plugins
\end_layout

\begin_layout Standard
List all plugins and their ids.
 No return value.
\end_layout

\begin_layout Subsubsection
kill-emulator
\end_layout

\begin_layout Standard
Ungracefully shut down the emulator, saving crash dump.
\end_layout

\begin_layout Subsubsection
exit-emulator
\end_layout

\begin_layout Standard
Gracefully shut down the emulator.
\end_layout

\begin_layout Subsubsection
set-emulator-identifier <name>
\end_layout

\begin_layout Standard
Sets the current emulator name to <name> (use the special name of 
\begin_inset Quotes eld
\end_inset

<delete>
\begin_inset Quotes erd
\end_inset

 to remove the current name) and returns the previous name.
\end_layout

\begin_layout Subsubsection
get-emulator-identifier
\end_layout

\begin_layout Standard
Returns the current emulator identifier.
\end_layout

\begin_layout Subsection
By PC execution server
\end_layout

\begin_layout Subsubsection
memory-write-byte <address> <value>
\end_layout

\begin_layout Standard
Writes byte with value <value> to physical address <address>.
 No return value.
\end_layout

\begin_layout Subsubsection
memory-write-word <address> <value>
\end_layout

\begin_layout Standard
Writes word (little-endian) with value <value> to physical address <address>.
 No return value.
\end_layout

\begin_layout Subsubsection
memory-write-dword <address> <value>
\end_layout

\begin_layout Standard
Writes dword (little-endian) with value <value> to physical address <address>.
 No return value.
\end_layout

\begin_layout Subsubsection
memory-write-qword <address> <value>
\end_layout

\begin_layout Standard
Writes qword (little-endian) with value <value> to physical address <address>.
 No return value.
\end_layout

\begin_layout Subsubsection
memory-read-byte <address>
\end_layout

\begin_layout Standard
Returns byte read from physical address <address>.
\end_layout

\begin_layout Subsubsection
memory-read-word <address>
\end_layout

\begin_layout Standard
Returns word (little-endian) read from physical address <address>.
\end_layout

\begin_layout Subsubsection
memory-read-dword <address>
\end_layout

\begin_layout Standard
Returns dword (little-endian) read from physical address <address>.
\end_layout

\begin_layout Subsubsection
memory-read-qword <address>
\end_layout

\begin_layout Standard
Returns qword (little-endian) read from physical address <address>.
\end_layout

\begin_layout Subsection
By display support server
\end_layout

\begin_layout Subsubsection
add-renderer <renderer>
\end_layout

\begin_layout Standard
Adds renderer <renderer> to list of renderers.
\end_layout

\begin_layout Subsubsection
remove-renderer <renderer>
\end_layout

\begin_layout Standard
Removes renderer <renderer> from list of renderers.
\end_layout

\begin_layout Subsubsection
list-renderers
\end_layout

\begin_layout Standard
Returns the list of renderers.
\end_layout

\begin_layout Subsubsection
get-pc-output
\end_layout

\begin_layout Standard
Returns the PC output object.
\end_layout

\begin_layout Subsubsection
get-pc
\end_layout

\begin_layout Standard
Returns the PC object.
\end_layout

\begin_layout Subsection
By display panel
\end_layout

\begin_layout Subsubsection
screenshot-vga-buffer [<name>]
\end_layout

\begin_layout Standard
Screen shot the current VGA output buffer to file named <name> (if not present,
 filename is picked).
 Returns nothing.
\end_layout

\begin_layout Subsubsection
screenshot-render-buffer [<name>]
\end_layout

\begin_layout Standard
Screen shot the current render output buffer to file named <name> (if not
 present, filename is picked).
 Returns nothing.
\end_layout

\begin_layout Subsection
By joystick input plugin
\end_layout

\begin_layout Subsubsection
joystickinput-setwinpos <x> <y>
\end_layout

\begin_layout Standard
Move the position of joystick input window to screen coordinates <x>, <y>
\end_layout

\begin_layout Subsection
By Lua Plugin
\end_layout

\begin_layout Subsubsection
send-lua-message <message>
\end_layout

\begin_layout Standard
Send message <message> to running Lua script.
\end_layout

\begin_layout Subsubsection
set-luaplugin-window-position <x> <y>
\end_layout

\begin_layout Standard
Move the position of Lua window to screen coordinates <x>, <y>
\end_layout

\begin_layout Subsubsection
run-lua-script <script>
\end_layout

\begin_layout Standard
Run the specified lua script (<script> acts like lua invoke line in Lua
 plugin)
\end_layout

\begin_layout Subsubsection
terminate-lua-script
\end_layout

\begin_layout Standard
Kill the running Lua script.
\end_layout

\begin_layout Subsubsection
clear-lua-console
\end_layout

\begin_layout Standard
Clear the Lua console.
\end_layout

\begin_layout Subsection
By PC Control Plugin
\end_layout

\begin_layout Subsubsection
set-pccontrol-window-position <x> <y>
\end_layout

\begin_layout Standard
Move the position of the PC control window to screen coordinates <x>, <y>
\end_layout

\begin_layout Subsubsection
save-image <filename> <index>
\end_layout

\begin_layout Standard
Save raw dump of image in slot <index> to file <filename>.
 The index may be real floppy/cdrom image index or one of following pseudo-indic
es: -1 for hda, -2 for hdb, -3 for hdc and -4 for hdd.
\end_layout

\begin_layout Subsubsection
unpause-pc
\end_layout

\begin_layout Standard
Start running the PC (resume).
\end_layout

\begin_layout Subsubsection
pause-pc
\end_layout

\begin_layout Standard
Stop running the PC (pause).
\end_layout

\begin_layout Subsubsection
send-event <class> [<args>...]
\end_layout

\begin_layout Standard
Append event for class <class> with arguments <args>...
 to event queue.
\end_layout

\begin_layout Subsubsection
send-event-lowbound <lowbound> <class> [<args>...]
\end_layout

\begin_layout Standard
Append event for class <class> with arguments <args>...
 to event queue, giving timestamp of at least <lowbound>.
\end_layout

\begin_layout Subsubsection
save-state <filename>
\end_layout

\begin_layout Standard
Savestate to file <filename>.
\end_layout

\begin_layout Subsubsection
save-movie <filename>
\end_layout

\begin_layout Standard
Save movie to file <filename>.
\end_layout

\begin_layout Subsubsection
save-dump <filename>
\end_layout

\begin_layout Standard
Save status dump to file <filename>.
\end_layout

\begin_layout Subsubsection
load-state <filename>
\end_layout

\begin_layout Standard
Load state from file <filename>
\end_layout

\begin_layout Subsubsection
load-rewind <filename>
\end_layout

\begin_layout Standard
Load state from file <filename>, only rewinding the movie.
\end_layout

\begin_layout Subsubsection
load-movie <filename>
\end_layout

\begin_layout Standard
Load movie from file <filename>.
\end_layout

\begin_layout Subsubsection
save-ram-binary <filename>
\end_layout

\begin_layout Standard
Save binary dump of machine RAM to <filename>.
\end_layout

\begin_layout Subsubsection
save-ram-text <filename>
\end_layout

\begin_layout Standard
Save hexadecimal dump of machine RAM to <filename>.
\end_layout

\begin_layout Subsection
By PC Monitor plugin
\end_layout

\begin_layout Subsubsection
set-pcmonitor-window-position <x> <y>
\end_layout

\begin_layout Standard
Move the position of the PC monitor window to screen coordinates <x>, <y>
\end_layout

\begin_layout Subsection
By virtual keyboard
\end_layout

\begin_layout Subsubsection
set-virtualkeyboard-window-position <x> <y>
\end_layout

\begin_layout Standard
Move the virtual keyboard window to screen coordinates <x>,<y>.
\end_layout

\begin_layout Subsection
By breakpoints menu
\end_layout

\begin_layout Subsubsection
trap-vertical-retrace-start <enabled>
\end_layout

\begin_layout Standard
Set vertical retrace start breakpoint on/off.
\end_layout

\begin_layout Subsubsection
trap-vertical-retrace-end <enabled>
\end_layout

\begin_layout Standard
Set vertical retrace end breakpoint on/off.
\end_layout

\begin_layout Subsubsection
trap-bios-keyboard-input <enabled>
\end_layout

\begin_layout Standard
Set BIOS keyboard input breakpoint on/off.
\end_layout

\begin_layout Subsubsection
trap-timed <timeout>
\end_layout

\begin_layout Standard
Set breakpoint specified number (<timeout>) nanoseconds after starting.
 Use negative timeout value to disable.
\end_layout

\begin_layout Subsection
By disk image service
\end_layout

\begin_layout Subsubsection
list-images [<filename>]
\end_layout

\begin_layout Standard
Print listing of images available.
 If <filename> is specified, prints the list to specified file.
 Otherwise prints the list on the screen.
\end_layout

\begin_layout Subsubsection
print-image-info <imagename> [<filename>]
\end_layout

\begin_layout Standard
Print information about image <imagename>.
 If <filename> is specified, the information is printed into specified file,
 otherwise to the screen.
\end_layout

\begin_layout Subsubsection
print-imagefile-info <imagefilename> [<outfilename>]
\end_layout

\begin_layout Standard
Print information about image file <imagefilename>.
 If <outfilename> is specified, the information is printed into specified
 file, otherwise to the screen.
\end_layout

\begin_layout Subsubsection
add-library <directory>
\end_layout

\begin_layout Standard
Add images in <directory> to pool of images and set location to save images
 to to be <directory>.
\end_layout

\begin_layout Subsubsection
make-image <name> <file> <type> [<arguments>...]
\end_layout

\begin_layout Standard
Make image named <name> out of file or directory <file>.
 The type of image will be <type>, which can be one of 
\begin_inset Quotes eld
\end_inset

FLOPPY
\begin_inset Quotes erd
\end_inset

, 
\begin_inset Quotes eld
\end_inset

HARDDRIVE
\begin_inset Quotes erd
\end_inset

, 
\begin_inset Quotes eld
\end_inset

CDROM
\begin_inset Quotes erd
\end_inset

, 
\begin_inset Quotes eld
\end_inset

BIOS
\begin_inset Quotes erd
\end_inset

 or 
\begin_inset Quotes eld
\end_inset

IMAGE
\begin_inset Quotes erd
\end_inset

.
 <Arguments> gives arguments.
 The following arguments are valid:
\end_layout

\begin_layout Itemize
sides=<sides>: Set number of sides.
 If not specified, try to guess.
 Floppies (1-2)/HDDs (1-16) only.
\end_layout

\begin_layout Itemize
tracks=<sides>: Set number of tracks.
 If not specified, try to guess.
 Floppies (1-256)/HDDs (2-1024) only.
\end_layout

\begin_layout Itemize
sectors=<sides>: Set number of sectors.
 If not specified, try to guess.
 Floppies (1-255)/HDDs (1-63) only.
\end_layout

\begin_layout Itemize
volumelabel=<label>: Set volume label.
 Only when making Floppies/HDDs from directory.
\end_layout

\begin_layout Itemize
timestamp=YYYYMMDDHHMMSS: Set timestamp for files.
 Only when making Floppies/HDDs from directory.
\end_layout

\begin_layout Standard
Note that if one of sides/tracks/sectors is specified, all must be.
\end_layout

\begin_layout Section
Events
\end_layout

\begin_layout Subsection
By bus core
\end_layout

\begin_layout Subsubsection
emuname-changed <newname>
\end_layout

\begin_layout Standard
Fired when emuname is changed.
 <newname> is the new emulator name.
\end_layout

\begin_layout Subsection
By PC execution plugin
\end_layout

\begin_layout Subsubsection
pc-change <pc>
\end_layout

\begin_layout Standard
Notifies that the PC object to use is now <pc>.
\end_layout

\begin_layout Subsubsection
pc-start
\end_layout

\begin_layout Standard
Notifies that PC execution has resumed.
\end_layout

\begin_layout Subsubsection
pc-stop
\end_layout

\begin_layout Standard
Notifies that PC execution has paused.
\end_layout

\end_body
\end_document
